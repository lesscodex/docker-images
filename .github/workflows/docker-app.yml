on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    paths:
      - ".github/workflows/docker-app.yml"
      - "*.app.test.yml"
      - "app/**"
  # Triggered every week.
  schedule:
    - cron: "0 0 * * FRI"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Run tests
        env:
          FILE_PATH: docker-compose.app.test.yml
        run: |
          if [ -f $FILE_PATH ]; then
            docker compose --file $FILE_PATH build
          fi

  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      matrix:
        feature:
          - name: cacher
            context: .
            file: app/apt-cacher-ng.Dockerfile
            image: app
            tag: cacher
          - name: caddy
            context: app/caddy
            file: app/caddy/Dockerfile
            image: caddy
            tag: latest
          - name: vlmcsd
            context: .
            file: app/vlmcsd.Dockerfile
            image: app
            tag: vlmcsd
          - name: coredns
            context: app/coredns
            file: app/coredns/coredns.Dockerfile
            image: coredns
            tag: latest
          - name: devpi
            context: app/devpi
            file: app/devpi/devpi-server.Dockerfile
            image: devpi
            tag: latest
          - name: isc-dhcpd
            context: .
            file: app/dhcpd/alpine.Dockerfile
            image: isc-dhcpd
            tag: alpine
          - name: logstash
            context: .
            file: app/logstash/aliyun.Dockerfile
            image: logstash
            tag: aliyun
          - name: n2n
            context: .
            file: app/n2n/supernode.Dockerfile
            image: n2n
            tag: supernode-2.8
          - name: nostrict-5.7
            context: .
            file: app/mysql/nostrict-5.7.Dockerfile
            image: mysql
            tag: nostrict-5.7
          - name: pescms-5.7
            context: .
            file: app/mysql/pescms-5.7.Dockerfile
            image: mysql
            tag: pescms-5.7
          - name: tomcat-7.0.23-jdk6
            context: app/tomcat
            file: app/tomcat/tomcat-7.0.23-jdk6.Dockerfile
            image: tomcat
            tag: 7.0.23-jdk6
          - name: tomcat-7.0.23-jre6
            context: app/tomcat
            file: app/tomcat/tomcat-7.0.23-jre6.Dockerfile
            image: tomcat
            tag: 7.0.23-jre6

    steps:
      - uses: actions/checkout@v5

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.feature.context }}
          file: ${{ matrix.feature.file }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.feature.image }}:${{ matrix.feature.tag }}
          load: true

      - name: Push the Docker image
        run: docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.feature.image }}:${{ matrix.feature.tag }}

      - uses: actions/delete-package-versions@v5
        with:
          owner: ${{ github.repository_owner }}
          package-name: ${{ matrix.feature.image }}
          package-type: "container"
          min-versions-to-keep: 0
          delete-only-untagged-versions: "true"
