on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

    paths:
      - ".github/workflows/docker-base.yml"
      - "*.base.test.yml"
      - "debian/**"
      - "ubuntu/**"

  # Run tests for any PRs.
  pull_request:

  # Triggered every week.
  schedule:
    - cron: "0 0 * * FRI"

env:
  REGISTRY: docker.io
  REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [debian, ubuntu]
        feature: [ssh, py3, build, ansible2]

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        env:
          FILE_NAME: ${{ matrix.os }}/${{ matrix.feature }}.Dockerfile
        run: |
          if [ -f $FILE_NAME ]; then
            docker build . --file $FILE_NAME
          fi

  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'

    strategy:
      matrix:
        os: [debian, ubuntu]
        feature: [ssh, py3, build, ansible2]

    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        env:
          FILE_NAME: ${{ matrix.os }}/${{ matrix.feature }}.Dockerfile
          IMAGE_NAME: ${{ matrix.os }}:${{ matrix.feature }}
        run: docker build . --file $FILE_NAME
          --tag $IMAGE_NAME

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        env:
          IMAGE_NAME: ${{ matrix.os }}:${{ matrix.feature }}
        run: |
          IMAGE_ID=$REGISTRY/${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
