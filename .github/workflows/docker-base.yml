on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    paths:
      - ".github/workflows/docker-base.yml"
      - "*.base.test.yml"
      - "debian/**"
      - "ubuntu/**"
  # Triggered every week.
  schedule:
    - cron: "0 0 * * FRI"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [debian, ubuntu]
        feature: [ssh, ansible2]

    steps:
      - uses: actions/checkout@v5

      - name: Run tests
        env:
          FILE_NAME: ${{ matrix.os }}/${{ matrix.feature }}.Dockerfile
        run: |
          if [ -f $FILE_NAME ]; then
            docker build . --file $FILE_NAME
          fi

  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      matrix:
        os: [debian, ubuntu]
        feature: [ssh, ansible2]

    steps:
      - uses: actions/checkout@v5

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 根据branch, tags加image tag, 不适用
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.feature }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.os }}/${{ matrix.feature }}.Dockerfile
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.os }}:${{ matrix.feature }}
          push: true
          # tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}

      # - name: Push the Docker image
      #   run: docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.os }}:${{ matrix.feature }}

      # subject-name不能含tag名, 会生成sha256镜像
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v3
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.os }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

      - uses: actions/delete-package-versions@v5
        with:
          owner: ${{ github.repository_owner }}
          package-name: ${{ matrix.os }}
          package-type: "container"
          min-versions-to-keep: 0
          delete-only-untagged-versions: "true"
